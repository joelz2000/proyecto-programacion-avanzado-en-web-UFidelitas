@model FrontEnd.Models.PerfilUsuarioViewModel



<div class="container d-flex flex-row flex-wrap">




    <!--
        Imagen de Perfil
    -->
    <div id="content-fotoPerfil" class="d-flex p-2 col-lg-3 h-100">
        <div id="fotoPerfil" class="d-flex flex-column w-100 h-100">

            @Html.HiddenFor(perfilUsuario => perfilUsuario.imagenUsuario, new { id = "imagenUsuario" })
            <img class="w-100 h-100 mb-2" alt="Responsive image" src="@Model.imagenUsuario" />
            @using (Html.BeginForm("SubirImagenPerfil", "PerfilUsuario", FormMethod.Post, new { enctype = "multipart/form-data", id = "formFotoPerfil" }))
            {
                @Html.HiddenFor(perfilUsuario => perfilUsuario.id_usuario, new { id = "id_usuario" })
                @Html.HiddenFor(perfilUsuario => perfilUsuario.Usuario_ID, new { id = "Usuario_ID" })
                @Html.HiddenFor(perfilUsuario => perfilUsuario.nombre, new { id = "nombre2" })
                @Html.HiddenFor(perfilUsuario => perfilUsuario.apellidos, new { id = "apellidos2" })
                @Html.HiddenFor(perfilUsuario => perfilUsuario.correo, new { id = "correo2" })
                @Html.HiddenFor(perfilUsuario => perfilUsuario.Telefono, new { id = "telefono2" })
            @Html.HiddenFor(perfilUsuario => perfilUsuario.id_canton, new { id = "cantonId" })
            @Html.HiddenFor(perfilUsuario => perfilUsuario.id_distrito, new { id = "distritoId" })
            <div class="input-group mb-3">
                <div class="input-group-prepend">
                    <span class="input-group-text" id="inputGroupFileAddon01">Subir</span>
                </div>
                <div class="custom-file">
                    <input type="file" name="file" id="fotoPerfil" class="custom-file-input">
                    <label class="custom-file-label" for="inputGroupFile01">Elegir foto</label>
                </div>
            </div>
            <div class="form-group">
                <button type="submit" class="btn btn-outline-primary w-100">Editar Foto de Perfil</button>
            </div>
            }

            <hr />
        </div>


    </div>

   
    <!--

        Informacion Personal
    -->
    <div class="container-fluid d-flex flex-column flex-wrap col-lg-9 h-100">

        <!--
         Opciones como ver sus facturas
    -->
        <div class="card mb-2" style="width: 18rem;">
           
            <div class="card-body bg-white text-center">
                <h5 class="card-title text-black-50">Facturas</h5>
                <p class="card-text  text-black-50">Facturas de tus compras</p>
                @Html.ActionLink("Ir", "MostrarFacturasUsuario", new { id_usuario = Model.id_usuario }, new { @class = "btn btn-primary w-100 " })
            </div>
        </div>
        <div id="content-InformacionPersonal" class="bg-white rounded col-lg-12 h-100">
            <div id="informacionPersonal" class="d-flex flex-column h-100">

                <div id="header-informacionPersonal" class="p-2 mt-2 mb-0 border-bottom">
                    <h2 class="text-dark">Informacion Personal</h2>
                </div>

                <div id="body-informacionPersonal" class="">
                    <form id="__AjaxAntiForgeryForm" action="#" method="post">@Html.AntiForgeryToken()</form>
                    @Html.HiddenFor(perfilUsuario => perfilUsuario.id_usuario, new { id = "id_usuario" })
                    @Html.HiddenFor(perfilUsuario => perfilUsuario.Usuario_ID, new { id = "Usuario_ID" })
                    <div class="form-row p-2 mt-3">
                        <div class="form-group col-md-4">
                            @Html.LabelFor(m => m.nombre, new { @class = "text-dark" })
                            @Html.EditorFor(m => m.nombre, new { htmlAttributes = new { @class = "form-control bg-white", min = 0 } })
                            @Html.ValidationMessageFor(m => m.nombre, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group col-md-4">
                            @Html.LabelFor(m => m.apellidos, new { @class = "text-dark" })
                            @Html.EditorFor(m => m.apellidos, new { htmlAttributes = new { @class = "form-control bg-white", min = 0 } })
                            @Html.ValidationMessageFor(m => m.apellidos, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group col-md-12">
                            @Html.LabelFor(m => m.Telefono, new { @class = "text-dark" })
                            @Html.EditorFor(m => m.Telefono, new { htmlAttributes = new { @class = "form-control bg-white", min = 0 } })
                            @Html.ValidationMessageFor(m => m.Telefono, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group col-md-12">
                            @Html.LabelFor(m => m.correo, new { @class = "text-dark" })
                            @Html.EditorFor(m => m.correo, new { htmlAttributes = new { @class = "form-control bg-white", min = 0 } })
                            @Html.ValidationMessageFor(m => m.correo, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group row border-top col-md-12 mb-0">
                            <button type="submit" class="btn btn-primary mt-2" id="Guardar" onclick="guardarInformacionPersonal()">Guardar</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div id="content-Direccion" class="bg-white rounded col-lg-12 mt-5 h-100">
            <div id="Direccion" class="d-flex flex-column h-100">

                <div id="header-Direccion" class="p-2 mt-2 mb-0 border-bottom">
                    <h2 class="text-dark">Direccion</h2>
                </div>

                <div id="body-Direccion" class="">
                    <form id="__AjaxAntiForgeryForm" action="#" method="post">@Html.AntiForgeryToken()</form>
                    @Html.HiddenFor(perfilUsuario => perfilUsuario.id_usuario, new { id = "id_usuario" })
                    @Html.HiddenFor(perfilUsuario => perfilUsuario.Usuario_ID, new { id = "Usuario_ID" })
                    <div class="form-row p-2 mt-3">
                        <div class="form-group col-md-12">
                            @Html.LabelFor(m => m.direccion, new { @class = "text-dark" })
                            @Html.EditorFor(m => m.direccion, new { htmlAttributes = new { @class = "form-control bg-white", min = 0 } })
                            @Html.ValidationMessageFor(m => m.direccion, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group col-md-12">
                            @Html.LabelFor(m => m.id_provincia, new { @class = "text-dark" })
                            @Html.DropDownListFor(m => m.id_provincia, new SelectList(Model.lista_provincias, "Value", "Text"), new { @class = "form-control bg-white" })
                            @Html.ValidationMessageFor(m => m.id_provincia, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group col-md-12">
                            @Html.LabelFor(m => m.id_canton, new { @class = "text-dark" })
                            @Html.DropDownListFor(m => m.id_canton, new SelectList(Model.lista_canton_usuario, "Value", "Text"), new { @class = "form-control bg-white" })
                            @Html.ValidationMessageFor(m => m.id_canton, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group col-md-12">
                            @Html.LabelFor(m => m.id_distrito, new { @class = "text-dark" })
                            @Html.DropDownListFor(m => m.id_distrito, new SelectList(Model.lista_distrito_usuario, "Value", "Text"), new { @class = "form-control bg-white" })
                            @Html.ValidationMessageFor(m => m.id_distrito, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group row border-top col-md-12 mb-0">
                            <button type="submit" class="btn btn-primary mt-2" id="guardarInformacionPersonal" onclick="guardarInformacionPersonal()">Guardar</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts
{
    <script src="~/Scripts/Cleave/cleave.min.js"></script>
    <script>

        $(function () {
            $("#formFotoPerfil :submit").click(function () {
                 var newUrl = '@Url.Action("Edit", "PerfilUsuario", routeValues: new { id = @Model.id_usuario })';
                var data = new FormData();
                var files = $("#file").get(0).files;
                if (files.length > 0) {
                    data.append("HelpSectionImages", files[0]);
                }
                $.ajax({
                    type: 'POST',
                    url: newUrl,
                    data: {file:data},
                    statusCode: {
                        200: function () {
                            Swal.fire(
                                'Perfil Actualizado!',
                                'Perfil ha sido actualizado exitosamente!',
                                'success'
                            ).then(function () {
                                window.location.href = newUrl;
                            });
                        },
                        400: function () {
                            Swal.fire(
                                'Error!',
                                'Bad request',
                                'error'
                            ).then(function () {
                                location.reload();
                            });
                        },
                        404: function () {
                            Swal.fire(
                                'Error!',
                                'Pagina no encontrada',
                                'error'
                            ).then(function () {
                                location.reload();
                            });
                        },
                        500: function () {
                            Swal.fire(
                                'Error!',
                                'Lo sentimos, hubo un error. Por favor Llena todos los datos de informacion personal o direccion',
                                'error'
                            ).then(function () {
                                location.reload();
                            });
                        }
                    }
                });
                return false;
            });
        });

        $('#id_provincia').on("change", function () {
            var url = '@Url.Action("obtenerCantones", "PerfilUsuario")';
            $.ajax({
                type: 'GET',
                url: url,
                data: {
                    id_provincia: $(this).children("option:selected").val(),
                },
            }).done(function (response) {
                    $('#id_canton').html('');
                    var options = '';
                    options += '<option value="0">Seleccionar</option>';
                    for (var canton in response) {
                        options += '<option value="' + canton + '">' + response[canton] + '</option>';
                    }
                    $('#id_canton').append(options);
            });
        });





        $('#id_canton').on("change", function () {
            var url = '@Url.Action("obtenerDistritos", "PerfilUsuario")';
            $.ajax({
                type: 'GET',
                url: url,
                data: {
                    id_distrito: $(this).children("option:selected").val(),
                },
            }).done(function (response) {
                    $('#id_distrito').html('');
                    var options = '';
                    options += '<option value="0">Seleccionar</option>';
                    for (var distrito in response) {
                        options += '<option value="' + distrito + '">' + response[distrito] + '</option>';
                    }
                    $('#id_distrito').append(options);
            });
        });

        function guardarInformacionPersonal() {
            var saveUrl = '@Url.Action("EditarInformacionPersonal", "PerfilUsuario")';
            var newUrl = '@Url.Action("Edit", "PerfilUsuario", routeValues: new { id = @Model.id_usuario })';
            $.ajax({
                type: 'POST',
                url: saveUrl,
                data: {
                    __RequestVerificationToken: $('[name = "__RequestVerificationToken"]').val(),
                    id_usuario: $("#id_usuario").val(),
                    nombre: $("#nombre").val(),
                    apellidos: $("#apellidos").val(),
                    Telefono: $("#Telefono").val(),
                    correo: $("#correo").val(),
                    Usuario_ID: $("#Usuario_ID").val(),
                    id_provincia: $("#id_provincia").val(),
                    id_canton: $("#id_canton").val(),
                    id_distrito: $("#id_distrito").val(),
                    direccion: $("#direccion").val(),
                    imagenUsuario: $("#imagenUsuario").val(),
                },
                statusCode: {
                    200: function () {
                        Swal.fire(
                            'Perfil Actualizado!',
                            'Perfil ha sido actualizado exitosamente!',
                            'success'
                        ).then(function () {
                            window.location.href = newUrl;
                        });
                    },
                    400: function () {
                        Swal.fire(
                            'Error!',
                            'Bad request',
                            'error'
                        ).then(function () {
                            location.reload();
                        });
                    },
                    404: function () {
                        Swal.fire(
                            'Error!',
                            'Pagina no encontrada',
                            'error'
                        ).then(function () {
                            location.reload();
                        });
                    },
                    500: function () {
                        Swal.fire(
                            'Error!',
                            'Lo sentimos, hubo un error. Por favor Llena todos los datos de informacion personal o direccion',
                            'error'
                        ).then(function () {
                            location.reload();
                        });
                    }
                }

            });
        }

       

    </script>
}