@model IEnumerable<FrontEnd.Models.PromocionesProductoViewModels>

@{
    ViewBag.Title = "Index";
}
@{
    var idProm = 0;
    foreach (var item2 in Model)
    {
        idProm = item2.promocionId;};
    }

<div class="btn-group">
    @Html.ActionLink("Agregar Nuevo Producto a la promocion", "Create", routeValues: new { id = idProm }, htmlAttributes: new { @class = "btn btn-block btn-success" })
    <br><br><br>
</div>

<div class="row">
    <div class="col-xs-12">
        <div class="box">

            <div class="box-header">
                <h2 class="box-title">Productos de la promocion</h2>
            </div>


            <div class="box-body table-responsive">

                <table id="tablaPromocionesProducto" class="table table-bordered table-striped">
                    <thead>
                        <tr>

                            <th>
                                @Html.DisplayNameFor(model => model.nombreProducto)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.nombrePromocion)
                            </th>
                            <th>
                                Acciones
                            </th>
                        </tr>
                    </thead>

                    <tbody>
                        
                        @foreach (var item in Model)
                        {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.nombreProducto)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.nombrePromocion)
                            </td>

                            <td>
                                <button type="button" class="btn btn-danger" onclick="eliminar(@item.promocionId, @item.productoId)">Eliminar</button>
                            </td>
                        </tr>
                        }
                    </tbody>

                </table>
            </div>
            <!-- /.box-body -->
            <div class="box-footer">


                @Html.ActionLink("Regresar", "Index", "PromocionesAdmin")

            </div>
        </div>

    </div>
</div>


@section Scripts
{
    <script>
        $(document).ready(function () {
            cargarTabla();
        });

        // funcion para cargar DataTable con información de historial
        var cargarTabla = function () {
            var tabla = $("#tablaPromocionesProducto").DataTable({
                responsive: true,
                "destroy": true,
                "language": {
                    "url": "//cdn.datatables.net/plug-ins/9dcbecd42ad/i18n/Spanish.json"
                }
            });
        }

        function eliminar(id_promocion, id_producto) {
            Swal.fire({
                title: 'Seguro que desea eliminar este Producto de la Promocion?',
                text: "Esta accion no se puede revertir!",
                type: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#3085d6',
                confirmButtonText: 'Eliminar'
            }).then((result) => {
                if (result.value) {
                    $.ajax({
                        type: 'POST',
                        url: `PromocionesProductoAdmin/Delete/${id_promocion}&${id_producto}`,
                        data: {
                            id_promocion: id_promocion,
                            id_producto: id_producto
                        },
                        statusCode: {
                            200: function () {
                                Swal.fire(
                                    'Exito!',
                                    'Producto eliminado de la promocion',
                                    'success'
                                ).then(function () {
                                    location.reload();
                                });
                            },
                            400: function () {
                                Swal.fire(
                                    'Error!',
                                    'Bad request',
                                    'error'
                                ).then(function () {
                                    location.reload();
                                });
                            },
                            404: function () {
                                Swal.fire(
                                    'Error!',
                                    'Pagina no encontrada',
                                    'error'
                                ).then(function () {
                                    location.reload();
                                });
                            },
                            500: function () {
                                Swal.fire(
                                    'Error!',
                                    'Lo sentimos, hubo un error. Por favor intentelo de nuevo mas tarde',
                                    'error'
                                ).then(function () {
                                    location.reload();
                                });
                            }
                        }

                    });
                }
            })
        }
    </script>
}
